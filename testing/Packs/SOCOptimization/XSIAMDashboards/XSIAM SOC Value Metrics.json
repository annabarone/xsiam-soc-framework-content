{"dashboards_data": [{"name": "XSIAM SOC Value Metrics", "description": "Actions taken by XSIAM for the SOC", "status": "ENABLED", "layout": [{"id": "row-4431", "data": [{"key": "xql_1727288949202", "data": {"type": "Custom XQL", "width": 50, "height": 396, "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| fields value_time , value_category\n| alter soc_event_mintutes = to_integer(value_time )\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_category\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_category yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_minutes\",\"#23ae4f\") seriescolor(\"total_soc_hours\",\"#7cb5ec\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "show_callouts", "value": "true"}}, {"command": {"op": "=", "name": "xaxis", "value": "value_category"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_minutes,total_soc_hours"}}, {"func": {"args": ["total_soc_minutes", "#23ae4f"], "name": "seriescolor"}}, {"func": {"args": ["total_soc_hours", "#7cb5ec"], "name": "seriescolor"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Time\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Category\""}}, {"func": {"args": ["total_soc_minutes", "Total SOC Minutes"], "name": "seriestitle"}}, {"func": {"args": ["total_soc_hours", "Total SOC Hours"], "name": "seriestitle"}}]}}}, {"key": "xql_1727288704820", "data": {"type": "Custom XQL", "width": 50, "height": 396, "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_tag  , total_soc_minutes  , total_soc_hours\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_tag yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_hours\",\"#7cb5ec\") seriescolor(\"total_soc_minutes\",\"#23ae4f\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "show_callouts", "value": "true"}}, {"command": {"op": "=", "name": "xaxis", "value": "value_tag"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_minutes,total_soc_hours"}}, {"func": {"args": ["total_soc_hours", "#7cb5ec"], "name": "seriescolor"}}, {"func": {"args": ["total_soc_minutes", "#23ae4f"], "name": "seriescolor"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Time\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Category\""}}, {"func": {"args": ["total_soc_minutes", "Total SOC Minutes"], "name": "seriestitle"}}, {"func": {"args": ["total_soc_hours", "Total SOC Hours"], "name": "seriestitle"}}]}}}]}, {"id": "row-9112", "data": [{"key": "xql_1727365426313", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 400, "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as product, Vendor as vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, product, value_taskname, value_time, vendor\n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by product, vendor\n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields product, vendor, total_soc_minutes  , total_soc_hours\n| sort desc total_soc_hours\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = funnel header = \"Most Used Vendors\" show_callouts = `true` show_callouts_names = `true` xaxis = vendor yaxis = total_soc_hours ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "funnel", "commands": [{"command": {"op": "=", "name": "header", "value": "\"Most Used Vendors\""}}, {"command": {"op": "=", "name": "show_callouts", "value": "true"}}, {"command": {"op": "=", "name": "show_callouts_names", "value": "true"}}, {"command": {"op": "=", "name": "xaxis", "value": "vendor"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}]}}}, {"key": "xql_1727365220224", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 400, "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as product, Vendor as vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, product, value_taskname, value_time, vendor\n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by product  , vendor \n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields product , vendor , total_soc_minutes  , total_soc_hours\n| alter tool = concat(concat(vendor  , \" \"), product )\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = pie subtype = full header = \"Tool Usage in Hours\" xaxis = tool yaxis = total_soc_hours ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "subtype", "value": "full"}}, {"command": {"op": "=", "name": "header", "value": "\"Tool Usage in Hours\""}}, {"command": {"op": "=", "name": "xaxis", "value": "tool"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}]}}}, {"key": "xql_1730385056739", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 400, "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter starred = alert->CustomFields.starred\n| filter starred = \"true\"\n\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as product, Vendor as vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, product, value_taskname, value_time, vendor, taskName \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| filter value_scriptid = \"Custom\"\n| comp count() as tasknameCount by taskName\n| fields taskName, taskNameCount\n| sort desc taskNameCount\n\n\n\n| view graph type = pie subtype = full xaxis = taskName yaxis = taskNameCount legend_percentage = `true` seriestitle(\"taskNameCount\",\"Custom Scripts Used\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "subtype", "value": "full"}}, {"command": {"op": "=", "name": "xaxis", "value": "taskName"}}, {"command": {"op": "=", "name": "yaxis", "value": "taskNameCount"}}, {"command": {"op": "=", "name": "legend_percentage", "value": "true"}}, {"func": {"args": ["taskNameCount", "Custom Scripts Used"], "name": "seriestitle"}}]}}}]}, {"id": "row-1562", "data": [{"key": "xql_1727288655056", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 302, "phrase": "dataset = xsiam_playbookmetrics_raw\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\nincidentID = alert->[0].parentXDRIncident,\nalertType = alert->type,\nplaybookId = alert->playbookId,\nalertID = alert->[0].id\n\n| fields incidentID, playbookId, alertType, alertID\n| filter playbookId != \"\"\n| dedup alertID\n\n//Grab the value tags\n| join type = inner (dataset = value_tags\n| fields Category as value_category, PlaybookID as value_playbookid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (playbookId  =  vt.value_playbookid)\n| fields value_category, value_playbookid, value_tag, value_taskname, value_time\n\n// GRAPH this thing\n| fields value_time , value_tag , value_category\n| filter value_category  = \"use_case\"\n| alter soc_event_mintutes = to_integer(value_time )\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| sort desc total_soc_hours \n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Use Case Time\" xaxis = value_tag yaxis = total_soc_hours ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "header", "value": "\"Use Case Time\""}}, {"command": {"op": "=", "name": "xaxis", "value": "value_tag"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}]}}}, {"key": "xql_1727288808002", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 302, "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_mintutes = to_integer(value_time)\n| comp sum(soc_event_mintutes) as total_soc_minutes\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n\n\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Hours Saved by XSIAM\" yaxis = total_soc_hours dataunit = \"Hours\" headcolor = \"#f1f7f0\" font = \"Arial\" headerfontsize = 6 ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "single", "commands": [{"command": {"op": "=", "name": "subtype", "value": "standard"}}, {"command": {"op": "=", "name": "header", "value": "\"Hours Saved by XSIAM\""}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}, {"command": {"op": "=", "name": "dataunit", "value": "\"Hours\""}}, {"command": {"op": "=", "name": "headcolor", "value": "\"#f1f7f0\""}}, {"command": {"op": "=", "name": "font", "value": "\"Arial\""}}, {"command": {"op": "=", "name": "headerfontsize", "value": "6"}}]}}}, {"key": "xql_1727288763029", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 302, "phrase": "dataset = xsiam_playbookmetrics_raw \n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter \ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time )\n| comp sum(soc_event_minutes) as total_soc_minutes, first(_time) as TimeFrameBegin\n| alter TimeFrameEnds = time_frame_end()\n| alter TimeFrameWeeks = divide(timestamp_diff(TimeFrameEnds  , TimeFrameBegin  ,\"DAY\"),7)\n| alter TimeFrameWeeks = if(TimeFrameWeeks < 1, 1, TimeFrameWeeks )\n| alter TimeFrameHours = multiply(TimeFrameWeeks, 40)\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| alter total_fte_saved = round(divide(total_soc_hours, TimeFrameHours))\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Total FTEs Saved\" yaxis = total_fte_saved dataunit = \"FTEs\" ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "single", "commands": [{"command": {"op": "=", "name": "subtype", "value": "standard"}}, {"command": {"op": "=", "name": "header", "value": "\"Total FTEs Saved\""}}, {"command": {"op": "=", "name": "yaxis", "value": "total_fte_saved"}}, {"command": {"op": "=", "name": "dataunit", "value": "\"FTEs\""}}]}}}]}, {"id": "row-6340", "data": [{"key": "xql_1727708637582", "data": {"type": "Custom XQL", "width": 50, "height": 400, "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by original_tags \n| sort desc total_alerts\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "header", "value": "\"Total Alerts\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_alerts"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Alerts\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Data Sources\""}}, {"func": {"args": ["total_alerts", "Alerts by Data Source"], "name": "seriestitle"}}]}}}, {"key": "xql_1727710876337", "data": {"type": "Custom XQL", "width": 50, "height": 400, "phrase": "dataset = alerts \n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by alert_source \n| sort desc total_alerts\n\n| view graph type = pie show_callouts = `true` show_callouts_names = `true` xaxis = alert_source yaxis = total_alerts ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "show_callouts", "value": "`true`"}}, {"command": {"op": "=", "name": "show_callouts_names", "value": "`true`"}}, {"command": {"op": "=", "name": "xaxis", "value": "alert_source"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_alerts"}}]}}}]}, {"id": "row-9280", "data": [{"key": "xql_1727708764928", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 400, "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n//| filter original_tags contains \"Proofpoint\"  \n| filter resolution_status = ENUM.RESOLVED_OTHER or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE \n| comp count_distinct(alert_id) as total_alerts by original_tags  \n| sort desc total_alerts \n//| view column order = populated\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Auto Resolved Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "header", "value": "\"Total Auto Resolved Alerts\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_alerts"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Alerts\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Data Sources\""}}, {"func": {"args": ["total_alerts", "Alerts by Data Source"], "name": "seriestitle"}}]}}}, {"key": "xql_1727708836773", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 400, "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Incidents\n| comp count_distinct(incident_id) as total_incidents by original_tags  \n| sort desc total_incidents \n\n\n\n\n\n\n| view graph type = pie header = \"Total Incidents\" xaxis = original_tags yaxis = total_incidents ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "header", "value": "\"Total Incidents\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_incidents"}}]}}}, {"key": "xql_1727708903581", "data": {"type": "Custom XQL", "width": 33.333333333333336, "height": 400, "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Open manual alerts\n| filter resolution_status = ENUM.NEW or resolution_status = ENUM.UNDER_INVESTIGATION \n| comp count_distinct(incident_id) as total_incidents by original_tags    \n| sort desc total_incidents \n\n\n\n\n\n\n| view graph type = pie header = \"Total Manual Incidents\" xaxis = original_tags yaxis = total_incidents ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "header", "value": "\"Total Manual Incidents\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_incidents"}}]}}}]}], "default_dashboard_id": 1, "global_id": "9ba311c2c2414f3bb09eee0742daad78", "metadata": {"params": null}}], "widgets_data": [{"widget_key": "xql_1727288655056", "title": "Common Use Cases", "creation_time": 1745624327845, "description": "Which Use Cases are most often being executed", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\nincidentID = alert->[0].parentXDRIncident,\nalertType = alert->type,\nplaybookId = alert->playbookId,\nalertID = alert->[0].id\n\n| fields incidentID, playbookId, alertType, alertID\n| filter playbookId != \"\"\n| dedup alertID\n\n//Grab the value tags\n| join type = inner (dataset = value_tags\n| fields Category as value_category, PlaybookID as value_playbookid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (playbookId  =  vt.value_playbookid)\n| fields value_category, value_playbookid, value_tag, value_taskname, value_time\n\n// GRAPH this thing\n| fields value_time , value_tag , value_category\n| filter value_category  = \"use_case\"\n| alter soc_event_mintutes = to_integer(value_time )\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| sort desc total_soc_hours \n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Use Case Time\" xaxis = value_tag yaxis = total_soc_hours ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "header", "value": "\"Use Case Time\""}}, {"command": {"op": "=", "name": "xaxis", "value": "value_tag"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727288704820", "title": "Time Saved by XSIAM per Task", "creation_time": 1745624330141, "description": "", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID )\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_tag  , total_soc_minutes  , total_soc_hours\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_tag yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_hours\",\"#7cb5ec\") seriescolor(\"total_soc_minutes\",\"#23ae4f\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "show_callouts", "value": "true"}}, {"command": {"op": "=", "name": "xaxis", "value": "value_tag"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_minutes,total_soc_hours"}}, {"func": {"args": ["total_soc_hours", "#7cb5ec"], "name": "seriescolor"}}, {"func": {"args": ["total_soc_minutes", "#23ae4f"], "name": "seriescolor"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Time\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Category\""}}, {"func": {"args": ["total_soc_minutes", "Total SOC Minutes"], "name": "seriestitle"}}, {"func": {"args": ["total_soc_hours", "Total SOC Hours"], "name": "seriestitle"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727288763029", "title": "Total FTEs Saved", "creation_time": 1745624332278, "description": "How many FTEs time it would have taken", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw \n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter \ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId, alertID )\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time )\n| comp sum(soc_event_minutes) as total_soc_minutes, first(_time) as TimeFrameBegin\n| alter TimeFrameEnds = time_frame_end()\n| alter TimeFrameWeeks = divide(timestamp_diff(TimeFrameEnds  , TimeFrameBegin  ,\"DAY\"),7)\n| alter TimeFrameWeeks = if(TimeFrameWeeks < 1, 1, TimeFrameWeeks )\n| alter TimeFrameHours = multiply(TimeFrameWeeks, 40)\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| alter total_fte_saved = round(divide(total_soc_hours, TimeFrameHours))\n\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Total FTEs Saved\" yaxis = total_fte_saved dataunit = \"FTEs\" ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "single", "commands": [{"command": {"op": "=", "name": "subtype", "value": "standard"}}, {"command": {"op": "=", "name": "header", "value": "\"Total FTEs Saved\""}}, {"command": {"op": "=", "name": "yaxis", "value": "total_fte_saved"}}, {"command": {"op": "=", "name": "dataunit", "value": "\"FTEs\""}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727288808002", "title": "Total SOC Hours Worked by XSIAM", "creation_time": 1745624333155, "description": "The number of hours worked by XSIAM automations", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId)\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_mintutes = to_integer(value_time)\n| comp sum(soc_event_mintutes) as total_soc_minutes\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n\n\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Hours Saved by XSIAM\" yaxis = total_soc_hours dataunit = \"Hours\" headcolor = \"#f1f7f0\" font = \"Arial\" headerfontsize = 6 ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "single", "commands": [{"command": {"op": "=", "name": "subtype", "value": "standard"}}, {"command": {"op": "=", "name": "header", "value": "\"Hours Saved by XSIAM\""}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}, {"command": {"op": "=", "name": "dataunit", "value": "\"Hours\""}}, {"command": {"op": "=", "name": "headcolor", "value": "\"#f1f7f0\""}}, {"command": {"op": "=", "name": "font", "value": "\"Arial\""}}, {"command": {"op": "=", "name": "headerfontsize", "value": "6"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727288949202", "title": "Time Save by Category", "creation_time": 1745624334794, "description": "Total time saved by Category that XSIAM is helping SOC", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId, alertID )\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| fields value_time , value_category\n| alter soc_event_mintutes = to_integer(value_time )\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_category\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_category yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_minutes\",\"#23ae4f\") seriescolor(\"total_soc_hours\",\"#7cb5ec\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "show_callouts", "value": "true"}}, {"command": {"op": "=", "name": "xaxis", "value": "value_category"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_minutes,total_soc_hours"}}, {"func": {"args": ["total_soc_minutes", "#23ae4f"], "name": "seriescolor"}}, {"func": {"args": ["total_soc_hours", "#7cb5ec"], "name": "seriescolor"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Time\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Category\""}}, {"func": {"args": ["total_soc_minutes", "Total SOC Minutes"], "name": "seriestitle"}}, {"func": {"args": ["total_soc_hours", "Total SOC Hours"], "name": "seriestitle"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727365220224", "title": "Tools used by XSIAM by Hour", "creation_time": 1745624338058, "description": "Which tools is XSIAM uniquely automating most of the time by number of hours", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId, alertID )\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as product, Vendor as vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, product, value_taskname, value_time, vendor\n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by product  , vendor \n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields product , vendor , total_soc_minutes  , total_soc_hours\n| alter tool = concat(concat(vendor  , \" \"), product )\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = pie subtype = full header = \"Tool Usage in Hours\" xaxis = tool yaxis = total_soc_hours ", "time_frame": {"relativeTime": 604800000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "subtype", "value": "full"}}, {"command": {"op": "=", "name": "header", "value": "\"Tool Usage in Hours\""}}, {"command": {"op": "=", "name": "xaxis", "value": "tool"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727365426313", "title": "XSIAM Vendor Usage", "creation_time": 1745624343099, "description": "Which Vendors are being most often automated by XSIAM.", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId, alertID )\n| dedup dedupkey\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as product, Vendor as vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, product, value_taskname, value_time, vendor\n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by product, vendor\n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields product, vendor, total_soc_minutes  , total_soc_hours\n| sort desc total_soc_hours\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = funnel header = \"Most Used Vendors\" show_callouts = `true` show_callouts_names = `true` xaxis = vendor yaxis = total_soc_hours ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "funnel", "commands": [{"command": {"op": "=", "name": "header", "value": "\"Most Used Vendors\""}}, {"command": {"op": "=", "name": "show_callouts", "value": "true"}}, {"command": {"op": "=", "name": "show_callouts_names", "value": "true"}}, {"command": {"op": "=", "name": "xaxis", "value": "vendor"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_soc_hours"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727708637582", "title": "Total Alerts", "creation_time": 1745624343765, "description": "All alerts firing by alert type", "data": {"phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by original_tags \n| sort desc total_alerts\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "header", "value": "\"Total Alerts\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_alerts"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Alerts\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Data Sources\""}}, {"func": {"args": ["total_alerts", "Alerts by Data Source"], "name": "seriestitle"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["alerts"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727708764928", "title": "Alerts Auto Resolved", "creation_time": 1745624344727, "description": "This includes deduping (Palo SOC Framework), auto triage, and auto-resolution by XSIAM", "data": {"phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n//| filter original_tags contains \"Proofpoint\"  \n| filter resolution_status = ENUM.RESOLVED_OTHER or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE \n| comp count_distinct(alert_id) as total_alerts by original_tags  \n| sort desc total_alerts \n//| view column order = populated\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Auto Resolved Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "column", "commands": [{"command": {"op": "=", "name": "subtype", "value": "grouped"}}, {"command": {"op": "=", "name": "layout", "value": "horizontal"}}, {"command": {"op": "=", "name": "header", "value": "\"Total Auto Resolved Alerts\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_alerts"}}, {"command": {"op": "=", "name": "xaxistitle", "value": "\"Alerts\""}}, {"command": {"op": "=", "name": "yaxistitle", "value": "\"Data Sources\""}}, {"func": {"args": ["total_alerts", "Alerts by Data Source"], "name": "seriestitle"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["alerts"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727708836773", "title": "Total Incidents after Grouping", "creation_time": 1745624345453, "description": "XSIAM grouping into incidents", "data": {"phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Incidents\n| comp count_distinct(incident_id) as total_incidents by original_tags  \n| sort desc total_incidents \n\n\n\n\n\n\n| view graph type = pie header = \"Total Incidents\" xaxis = original_tags yaxis = total_incidents ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "header", "value": "\"Total Incidents\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_incidents"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["alerts"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727708903581", "title": "Analysts Incidents", "creation_time": 1745624346667, "description": "The total incidents left-over for analysts to analize.", "data": {"phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Open manual alerts\n| filter resolution_status = ENUM.NEW or resolution_status = ENUM.UNDER_INVESTIGATION \n| comp count_distinct(incident_id) as total_incidents by original_tags    \n| sort desc total_incidents \n\n\n\n\n\n\n| view graph type = pie header = \"Total Manual Incidents\" xaxis = original_tags yaxis = total_incidents ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "header", "value": "\"Total Manual Incidents\""}}, {"command": {"op": "=", "name": "xaxis", "value": "original_tags"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_incidents"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["alerts"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1727710876337", "title": "Total Alerts By Source", "creation_time": 1745624347234, "description": "How many alerts are native XSIAM alerts", "data": {"phrase": "dataset = alerts \n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by alert_source \n| sort desc total_alerts\n\n| view graph type = pie show_callouts = `true` show_callouts_names = `true` xaxis = alert_source yaxis = total_alerts ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "show_callouts", "value": "`true`"}}, {"command": {"op": "=", "name": "show_callouts_names", "value": "`true`"}}, {"command": {"op": "=", "name": "xaxis", "value": "alert_source"}}, {"command": {"op": "=", "name": "yaxis", "value": "total_alerts"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["alerts"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}, {"widget_key": "xql_1730385056739", "title": "Custom Scripts Usage", "creation_time": 1745624348382, "description": "", "data": {"phrase": "dataset = xsiam_playbookmetrics_raw\n| alter starred = alert->CustomFields.starred\n| filter starred = \"true\"\n\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId != \"\"\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n| alter dedupkey = concat(incidentID,taskId, alertID )\n| dedup dedupkey\n\n// Filter for just automation\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as product, Vendor as vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, product, value_taskname, value_time, vendor, taskName \n| filter ((value_time != null and value_time != \"\"\"\"\"\")) \n| filter ((value_scriptid != null and value_scriptid != \"\"\"\"\"\")) \n\n| alter soc_event_minutes = to_integer(value_time)\n| filter value_scriptid = \"Custom\"\n| comp count() as tasknameCount by taskName\n| fields taskName, taskNameCount\n| sort desc taskNameCount\n\n\n\n\n| view graph type = pie subtype = full xaxis = taskName yaxis = taskNameCount legend_percentage = `true` seriestitle(\"taskNameCount\",\"Custom Scripts Used\") ", "time_frame": {"relativeTime": 86400000}, "viewOptions": {"type": "pie", "commands": [{"command": {"op": "=", "name": "subtype", "value": "full"}}, {"command": {"op": "=", "name": "xaxis", "value": "taskName"}}, {"command": {"op": "=", "name": "yaxis", "value": "taskNameCount"}}, {"command": {"op": "=", "name": "legend_percentage", "value": "true"}}, {"func": {"args": ["taskNameCount", "Custom Scripts Used"], "name": "seriestitle"}}]}}, "support_time_range": true, "additional_info": {"query_tables": ["value_tags", "xsiam_playbookmetrics_raw"], "query_uses_library": false}, "creator_mail": "sbrumley@paloaltonetworks.com"}]}